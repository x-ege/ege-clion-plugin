# Chinese (Simplified) messages
plugin.name=Xege IntelliJ 插件
plugin.description=EGE (Easy Graphics Engine) 针对 CLion IDE 的专属插件，提供简单易用的图形编程支持。

# Menu items
menu.ege.options=EGE 选项
menu.ege.options.description=EGE 图形库相关选项
menu.create.project=创建 EGE 项目
menu.create.project.description=创建一个新的 EGE C++ 图形项目
menu.setup.project=初始化为 EGE 项目
menu.setup.project.description=将工作区项目初始化为 EGE C++ 图形库项目
menu.about=关于 EGE
menu.about.description=查看 EGE 插件信息

# HelpAction
help.dialog.title=关于 Xege Plugin
help.dialog.message=• 版本: {0}\n• 作者: wysaid\n• 邮箱: this@xege.org\n• 源码地址: https://github.com/x-ege/ege-clion-plugin\n\n功能说明:\n• 提供 EGE (Easy Graphics Engine) 项目模板\n• 简化 C++ 图形编程项目配置

# EgeProjectGenerator
generator.name=Easy Graphics Engine
generator.description=创建一个基于 EGE (Easy Graphics Engine) 的 C++ 图形项目
generator.validation.not.empty=目录不为空，请选择一个空目录或不存在的目录
generator.task.title=创建 EGE 项目...
generator.task.copying.templates=正在复制 EGE 模板文件...
generator.task.copying.cmake=正在复制 CMake 模板文件...
generator.task.copying.source=正在复制 EGE 源码...
generator.task.copying.library=正在复制 EGE 库文件...
generator.task.complete=EGE 项目创建完成！
generator.task.file.copy.complete=文件复制完成
generator.error.failed=创建 EGE 项目失败: {0}

# CreateEgeProjectAction
create.dialog.title=选择 EGE 项目位置
create.dialog.description=选择创建 EGE 项目的位置
create.dialog.not.empty.title=目录不为空
create.dialog.not.empty.message=选定的目录不为空。是否继续？
create.options.dialog.title=创建 EGE 项目 - 选项配置
create.task.title=正在创建 EGE 项目...
create.task.structure=正在创建 EGE 项目结构...
create.task.cmake=正在复制 CMake 模板...
create.task.library=正在复制 EGE 库...
create.task.finalizing=正在完成...
create.task.success=项目创建成功！
create.success.title=项目已创建
create.success.message=EGE 项目创建成功，位置：\n{0}\n\n您可以通过 File → Open... 打开它。
create.error.title=错误
create.error.message=创建 EGE 项目失败: {0}

# SetupAsEgeProjectAction
setup.error.no.project.title=无法初始化 EGE 项目
setup.error.no.project.message=请先打开一个项目
setup.error.no.path.title=错误
setup.error.no.path.message=无法获取项目路径
setup.error.invalid.dir.message=项目目录不存在或不是有效的目录
setup.confirm.overwrite.title=确认覆盖
setup.confirm.overwrite.message=检测到目录中已存在 EGE 相关文件（ege 目录或 CMakeLists.txt）。\n继续操作将覆盖这些文件。是否继续？
setup.options.dialog.title=初始化为 EGE 项目 - 选项配置
setup.task.title=正在初始化 EGE 项目...
setup.task.initializing=正在初始化 EGE 项目结构...
setup.task.cmake=正在复制 CMake 模板文件...
setup.task.source=正在复制 EGE 源码...
setup.task.library=正在复制 EGE 库文件...
setup.task.finalizing=正在完成初始化...
setup.task.complete=项目初始化完成！
setup.success.title=初始化完成
setup.success.message=EGE 项目初始化成功！\n\n已创建的文件：\n• CMakeLists.txt - CMake 构建配置\n• main.cpp - 示例源文件\n• ege/ - EGE {0}目录\n\nCLion 将自动重新加载项目配置。
setup.success.library=库文件
setup.success.source=源码
setup.error.title=错误
setup.error.message=初始化 EGE 项目失败：{0}

# Project Options
options.label.title=<html><body style='width: 400px'><b>选择项目依赖方式：</b><br><br>• <b>不勾选（推荐）</b>：使用预编译的 EGE 静态库<br>  优点：编译速度快，项目结构简单<br><br>• <b>勾选</b>：直接使用 EGE 源代码<br>  优点：可以查看和修改 EGE 内部实现，适合高级用户</body></html>
options.checkbox.use.source=直接使用 EGE 源码作为项目依赖
options.demo.label=示例模板：
